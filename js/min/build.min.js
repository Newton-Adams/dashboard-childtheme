'use strict';

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
jQuery(document).ready(function ($) {
  $(document).on('click', '#save-post', function () {
    // const formaData = $('.forms-container > form').serializeArray()
    var form = document.getElementById("job-fields");
    // const submitter = document.querySelector("#save-post");
    var formData = new FormData(form);
    var sortedFormData = {};
    var i = 0;
    var _iterator = _createForOfIteratorHelper(formData.entries()),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var pair = _step.value;
        if (i < 7) {
          console.log(i, pair[0], pair[1]);
        }
        i++;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    console.log(formData);
    // $.ajax({
    //     type: "POST",
    //     url: workshop_pro_obj.ajaxurl,
    //     data: {
    //         'action': 'post_ajax_form',
    //         'form_data': formaData,
    //     },
    //     success: function (response) {	
    //         $('form[name="job-fields"]').find('input').val('')	
    //     }
    // });
  });

  //Fetch jobs and append in drop down
  $.ajax({
    type: "POST",
    url: workshop_pro_obj.ajaxurl,
    data: {
      'action': 'fetch_jobs'
    },
    success: function success(response) {
      $('#select-customer').html(response);
    }
  });
});
'use strict';

jQuery(document).ready(function ($) {
  //Toggle Sidebar View
  $(document).on('click', '#burger-menu svg', function () {
    $('body').toggleClass('menu-closed');
  });

  // Check if system is dark mode (currently set colors to light if it is)
  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
    // Dark mode is preferred
    document.documentElement.style.setProperty('--accent', '#009026');
    document.documentElement.style.setProperty('--heading', '#27272E');
    document.documentElement.style.setProperty('--body', '#425466');
    document.documentElement.style.setProperty('--muted', '#7A7A9D');
    document.documentElement.style.setProperty('--background-secondary', '#ffffff');
    document.documentElement.style.setProperty('--background-primary', '#F7FAFC');
  }

  //Forms
  //Add Job Form Row
  $(document).on('click', '.add-row-button', function (e) {
    var rowCount = $('#job-fields').children().length;
    var jobRow = "<div class=\"form-row\" >\n                            <div class=\"input-label-wrapper labour-name-wrapper\" >\n                                <label for=\"labour-name-".concat(rowCount, "\" >Labour Name</label>\n                                <input type=\"text\" id=\"labour-name-").concat(rowCount, "\" name=\"labour-name-").concat(rowCount, "\" >\n                            </div>\n                                <div class=\"input-label-wrapper description-wrapper\" >\n                                <label for=\"description-").concat(rowCount, "\" >Description</label>\n                            <input type=\"text\" id=\"description-").concat(rowCount, "\" name=\"description-").concat(rowCount, "\" >\n                            </div>\n                                <div class=\"input-label-wrapper unit-price-wrapper\" >\n                                <label for=\"unit-price-").concat(rowCount, "\" >Unit price </label>\n                            <input type=\"text\" id=\"unit-price-").concat(rowCount, "\" name=\"unit-price-").concat(rowCount, "\" >\n                            </div>\n                                <div class=\"input-label-wrapper quantity-wrapper\" >\n                                <label for=\"qty-").concat(rowCount, "\" >Quantity</label>\n                            <input type=\"text\" id=\"qty-").concat(rowCount, "\" name=\"qty-").concat(rowCount, "\" >\n                            </div>\n                                <div class=\"input-label-wrapper vat-wrapper\" >\n                                <label for=\"vat-").concat(rowCount, "\" >Vat </label>\n                            <input type=\"text\" id=\"vat-").concat(rowCount, "\" name=\"vat-").concat(rowCount, "\" >\n                            </div>\n                                <div class=\"input-label-wrapper line-total-wrapper\" >\n                                <label for=\"line-total-").concat(rowCount, "\" >Line Total </label>\n                            <input type=\"text\" id=\"line-total-").concat(rowCount, "\" name=\"line-total-").concat(rowCount, "\" >\n                            </div>\n                            <div class=\"delete-row\" >\n                                <svg width=\"14\" height=\"17\" viewBox=\"0 0 14 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M4.30769 6.36667C4.60508 6.36667 4.84615 6.60545 4.84615 6.9V13.3C4.84615 13.5946 4.60508 13.8333 4.30769 13.8333C4.01031 13.8333 3.76923 13.5946 3.76923 13.3V6.9C3.76923 6.60545 4.01031 6.36667 4.30769 6.36667Z\" fill=\"#7A7A9D\"/>\n                                    <path d=\"M7 6.36667C7.29738 6.36667 7.53846 6.60545 7.53846 6.9V13.3C7.53846 13.5946 7.29738 13.8333 7 13.8333C6.70262 13.8333 6.46154 13.5946 6.46154 13.3V6.9C6.46154 6.60545 6.70262 6.36667 7 6.36667Z\" fill=\"#7A7A9D\"/>\n                                    <path d=\"M10.2308 6.9C10.2308 6.60545 9.98969 6.36667 9.69231 6.36667C9.39492 6.36667 9.15385 6.60545 9.15385 6.9V13.3C9.15385 13.5946 9.39492 13.8333 9.69231 13.8333C9.98969 13.8333 10.2308 13.5946 10.2308 13.3V6.9Z\" fill=\"#7A7A9D\"/>\n                                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14 3.7C14 4.2891 13.5178 4.76667 12.9231 4.76667H12.3846V14.3667C12.3846 15.5449 11.4203 16.5 10.2308 16.5H3.76923C2.57969 16.5 1.61538 15.5449 1.61538 14.3667V4.76667H1.07692C0.482155 4.76667 0 4.2891 0 3.7V2.63333C0 2.04423 0.482155 1.56667 1.07692 1.56667H4.84615C4.84615 0.977563 5.32831 0.5 5.92308 0.5H8.07692C8.67169 0.5 9.15385 0.977563 9.15385 1.56667H12.9231C13.5178 1.56667 14 2.04423 14 2.63333V3.7ZM2.81942 4.76667L2.69231 4.82962V14.3667C2.69231 14.9558 3.17446 15.4333 3.76923 15.4333H10.2308C10.8255 15.4333 11.3077 14.9558 11.3077 14.3667V4.82962L11.1806 4.76667H2.81942ZM1.07692 3.7V2.63333H12.9231V3.7H1.07692Z\" fill=\"#7A7A9D\"/>\n                                </svg>\n                            </div>\n                        </div>");
    $('#job-fields').append(jobRow);
    $(document).on('change', '.quantity-wrapper input, .unit-price-wrapper input, .vat-wrapper input', calculateLineTotal);
  });

  //Delete Form Row
  $(document).on('click', '.delete-row', function (e) {
    $(this).closest('.form-row').remove();
  });

  //Calculate Line Total
  $(document).on('change', '.quantity-wrapper input, .unit-price-wrapper input, .vat-wrapper input', calculateLineTotal);
  function calculateLineTotal() {
    var quantity = Number($(this).closest('.form-row').find('.quantity-wrapper input').val().replace(',', '.'));
    var unitPrice = Number($(this).closest('.form-row').find('.unit-price-wrapper input').val().replace(',', '.'));
    var vat = quantity * unitPrice / 100 * 14;
    $(this).closest('.form-row').find('.vat-wrapper input').val(vat.toFixed(2));
    $(this).closest('.form-row').find('.line-total-wrapper input').val((quantity * unitPrice).toFixed(2));

    //Update Subtotals & Totals
    var lineSubtotal = 0;
    var vatSubtotal = 0;
    $(this).closest('form').find('.form-row').each(function (index, ele) {
      var lineTotal = $(ele).find('.line-total-wrapper input').val();
      var vat = $(ele).find('.vat-wrapper input').val();
      lineSubtotal += Number(lineTotal);
      vatSubtotal += Number(vat);
    });
    $(this).closest('.jobs-container').find('.sub-total-outer .sub-total .value').text("R".concat(lineSubtotal.toFixed(2)));
    $(this).closest('.jobs-container').find('.sub-total-outer .vat .value').text("R".concat(vatSubtotal.toFixed(2)));
    $(this).closest('.jobs-container').find('.sub-total-outer .total .value').text("R".concat((lineSubtotal + vatSubtotal).toFixed(2)));
  }
});